version: '3'

services:
  backend:
    build: .
    container_name: efood_backend
    #hostname: efood_backend
    #restart: always
    command: python manage.py runserver 0.0.0.0:8000 #bash entrypoint.sh #python manage.py runserver 0.0.0.0:8000
    # volumes соответствие директорий на локальной машине и в контейнрер
    volumes:
      - .:/efood
      - ./static:/efood/static
      - ./media:/efood/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - pgdb
      - celery
      - redis
    links:
      - pgdb:pgdb
#    networks:
#      - djangonetwork

  celery:
    build: .
    container_name: efood_celery
    command: celery -A project worker -l INFO
    volumes:
      - .:/efood
    env_file:
      - .env
    depends_on:
      - redis
      - pgdb

  celery_beat:
    build: .
    container_name: efood_celery_beat
    command: celery -A project beat -l info
    env_file:
      - .env
    depends_on:
      - redis
      - pgdb
      - celery
    volumes:
      - .:/efood

  pgdb:
    image: postgres
    container_name: efood_pgdb
    env_file:
      - .env
    volumes:
      - efood-pgdata:/var/lib/postgresql/data/
#    networks:
#      - djangonetwork

  pgadmin:
    container_name: efood_pgadmin
    image: dpage/pgadmin4
    depends_on:
      - pgdb
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8080:80"
    volumes:
      - efood-pgadmin-data:/var/lib/pgadmin
    links:
      - "pgdb:pgsql-server"

  redis:
    image: "redis:alpine"
    container_name: efood_redis

  nginx:
    build: ./nginx
    container_name: efood_nginx
    restart: on-failure
    ports:
      - 80:80
    volumes:
      - ./static:/static
      - ./media:/media
    depends_on:
      - backend

volumes:
  efood-pgdata:
  efood-pgadmin-data:
#networks:
#      djangonetwork:
#        driver: bridge
