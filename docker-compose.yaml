version: '3'

services:
  backend:
    build: .
    container_name: efood_backend
    #hostname: efood_backend
    #restart: always
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/efood
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - pgdb
      - celery
      - redis

  celery:
    build: .
    container_name: efood_celery
    command: celery -A project worker -l INFO
    volumes:
      - .:/efood
    env_file:
      - .env
    depends_on:
      - redis
      - pgdb

  celery_beat:
    build: .
    container_name: efood_celery_beat
    command: celery -A project beat -l info
    env_file:
      - .env
    depends_on:
      - redis
      - pgdb
      - celery
    volumes:
      - .:/efood

  pgdb:
    image: postgres
    container_name: efood_pgdb
    env_file:
      - .env
    volumes:
      - efood-pgdata:/var/lib/postgresql/data/

  pgadmin:
    container_name: efood_pgadmin
    image: dpage/pgadmin4
    depends_on:
      - pgdb
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8080:80"
    volumes:
      - efood-pgadmin-data:/var/lib/pgadmin
    links:
      - "pgdb:pgsql-server"

  redis:
    image: "redis:alpine"
    container_name: efood_redis

volumes:
  efood-pgdata:
  efood-pgadmin-data:
